% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/convert_soc.R
\name{convert_soc}
\alias{convert_soc}
\title{Convert SOC codes between years/releases}
\usage{
convert_soc(codes, from_year, to_year)
}
\arguments{
\item{codes}{A character vector of SOC codes to be converted. All codes must
be valid SOC codes (format DD-DDDD) present in the release corresponding to
\code{from_year} (see below).}

\item{from_year}{The year/release to convert from.}

\item{to_year}{The year/release to convert to.}
}
\value{
A data.table with 3 columns:
\itemize{
\item "code_\{from\}": the code in the release corresponding to \code{from_year}. This
will be a value given in \code{codes}.
\item "code_\{to\}": a possible value of "code_\{from\}" in the release
corresponding to \code{to_year}. There may be more than one "code_\{to\}" for each
"code_\{from\}", if "code_\{from\}" maps to multiple codes in the to-year
release.
\item "N": the number of SOC codes that fall under the umbrella of the match.
This can be used to make a rough estimate of how often the conversion
manifests. This is especially useful when one "code_\{from\}" matches to
multiple entries in "code_\{to\}".
}
}
\description{
Convert SOC codes between years/releases
}
\details{
This function matches SOC codes in a "from_year" to corresponding codes in a
"to_year". The from and to years are matched to releases of SIC based on the
most current NAICS release during each year. New SOC have been published
published in 2000, 2010, and 2018, so setting from_year = 2005 and
to_year = 2015 will, for example, convert 2000 SOC to 2010 SOC. All codes to
convert must be present in the SOC release corresponding to the from year.
Any codes that are not found in the from-year release will be identified in a
warning before return.

Note that you may search by higher levels of aggregation in the SOC codes by
entering codes with the appropriate number of trailing 0s (e.g. "11-0000"
for all management occupations in 2018).
}
\examples{
# Convert 3 codes from 2002 to 2022
convert_soc(c("11-0000","25-9041"), 2010, 2018)
# Because of release schedule, the following is equivalent to the above
convert_soc(c("11-0000","25-9041"), 2014, 2024)
}
